-- Advanced Autofarm Script with Wall Collision Avoidance
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Lighting = game:GetService("Lighting")

-- Autofarm Variables
local LP = Players.LocalPlayer
local Char = LP.Character or LP.CharacterAdded:Wait()
local HRP = Char:WaitForChild("HumanoidRootPart")
local Humanoid = Char:WaitForChild("Humanoid")
local AutofarmEnabled = false
local CurrentMap = nil
local Connection = nil

-- UI Variables
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local Background = Instance.new("ImageLabel")
local TabButtonsFrame = Instance.new("Frame")
local TabContentFrame = Instance.new("Frame")
local HomeTab, FarmTab
local ActiveTab = "Home"

-- Create Space Background
function CreateSpaceBackground()
    Background.Name = "SpaceBackground"
    Background.Size = UDim2.new(1, 0, 1, 0)
    Background.Position = UDim2.new(0, 0, 0, 0)
    Background.Image = "rbxassetid://13088277178" -- Space image ID
    Background.ScaleType = Enum.ScaleType.Tile
    Background.TileSize = UDim2.new(0, 512, 0, 512)
    Background.BackgroundTransparency = 1
    Background.ZIndex = 0
    Background.Parent = MainFrame

    -- Animate background
    local xOffset = 0
    RunService.Heartbeat:Connect(function(delta)
        xOffset = (xOffset + delta * 10) % 512
        Background.Offset = Vector2.new(xOffset, 0)
    end)
end

-- Create Gradient Button
function CreateGradientButton(parent, size, position, text)
    local button = Instance.new("TextButton")
    button.Name = text.."Button"
    button.Size = size
    button.Position = position
    button.Text = text
    button.Font = Enum.Font.GothamBold
    button.TextSize = 14
    button.TextColor3 = Color3.fromRGB(255, 255, 255)
    button.AutoButtonColor = false
    button.Parent = parent

    -- Gradient frame
    local gradientFrame = Instance.new("Frame")
    gradientFrame.Size = UDim2.new(1, 0, 1, 0)
    gradientFrame.BackgroundTransparency = 0.8
    gradientFrame.BorderSizePixel = 0
    gradientFrame.ZIndex = -1
    gradientFrame.Parent = button

    -- Gradient
    local gradient = Instance.new("UIGradient")
    gradient.Color = ColorSequence.new({
        ColorSequenceKeypoint.new(0, Color3.fromRGB(70, 0, 110)),
        ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 0, 70))
    })
    gradient.Rotation = 90
    gradient.Parent = gradientFrame

    -- Corner
    local corner = Instance.new("UICorner")
    corner.CornerRadius = UDim.new(0, 6)
    corner.Parent = button

    -- Stroke
    local stroke = Instance.new("UIStroke")
    stroke.Color = Color3.fromRGB(120, 0, 180)
    stroke.Thickness = 1
    stroke.Parent = button

    -- Hover effects
    button.MouseEnter:Connect(function()
        game:GetService("TweenService"):Create(gradient, TweenInfo.new(0.2), {
            Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(90, 0, 140)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(60, 0, 100))
            })
        }):Play()
    end)

    button.MouseLeave:Connect(function()
        game:GetService("TweenService"):Create(gradient, TweenInfo.new(0.2), {
            Color = ColorSequence.new({
                ColorSequenceKeypoint.new(0, Color3.fromRGB(70, 0, 110)),
                ColorSequenceKeypoint.new(1, Color3.fromRGB(40, 0, 70))
            })
        }):Play()
    end)

    return button
end

-- Create UI (previous UI code remains similar, but with gradient buttons)
function CreateUI()
    ScreenGui.Name = "CosmicAutofarmUI"
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ResetOnSpawn = false

    -- Main Window with dark transparent background
    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 320, 0, 240)
    MainFrame.Position = UDim2.new(0.5, -160, 0.5, -120)
    MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
    MainFrame.BackgroundColor3 = Color3.fromRGB(15, 15, 25)
    MainFrame.BackgroundTransparency = 0.2
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui

    -- Create space background
    CreateSpaceBackground()

    -- ... (rest of UI creation code remains similar but using CreateGradientButton instead of regular buttons)
end

-- Improved pathfinding function to avoid walls
function GetSafePath(targetPosition)
    local params = RaycastParams.new()
    params.FilterDescendantsInstances = {Char}
    params.FilterType = Enum.RaycastFilterType.Blacklist

    local direction = (targetPosition - HRP.Position).Unit
    local distance = (targetPosition - HRP.Position).Magnitude
    
    -- Check for obstacles
    local raycastResult = workspace:Raycast(HRP.Position, direction * distance, params)
    
    if raycastResult then
        -- If obstacle found, try to find alternative path
        local alternativePos = targetPosition + Vector3.new(
            math.random(-10, 10),
            0,
            math.random(-10, 10)
        )
        return alternativePos
    end
    
    return targetPosition
end

-- Improved teleport function with wall avoidance
function SafeTP(targetCoin)
    if not targetCoin then return end
    
    Humanoid:ChangeState(11) -- Freeze character
    
    local targetPos = targetCoin.Position
    local safePos = GetSafePath(targetPos)
    local distance = (safePos - HRP.Position).Magnitude
    
    -- Calculate path points
    local pathPoints = {}
    local steps = math.floor(distance / 5)
    for i = 1, steps do
        local lerpPos = HRP.Position:Lerp(safePos, i/steps)
        table.insert(pathPoints, lerpPos)
    end
    table.insert(pathPoints, safePos)
    
    -- Move through path points
    for _, point in ipairs(pathPoints) do
        if not AutofarmEnabled or not LP:GetAttribute("Alive") then break end
        
        local tweenInfo = TweenInfo.new(0.1, Enum.EasingStyle.Linear)
        local tween = TweenService:Create(HRP, tweenInfo, {CFrame = CFrame.new(point)})
        tween:Play()
        tween.Completed:Wait()
    end
    
    -- Final precise position
    HRP.CFrame = CFrame.new(targetPos)
end

-- Update the autofarm loop to use SafeTP instead of tp
function ToggleAutofarm()
    AutofarmEnabled = not AutofarmEnabled
    
    if FarmTab and FarmTab:FindFirstChild("ToggleButton") then
        local button = FarmTab.ToggleButton
        if AutofarmEnabled then
            button.Text = "Autofarm: ON"
            
            -- Start autofarm coroutine with improved movement
            if Connection then Connection:Disconnect() end
            Connection = RunService.Heartbeat:Connect(function()
                if not AutofarmEnabled then return end
                UpdateMap()
                local target = getNearest()
                if target and LP:GetAttribute("Alive") then
                    SafeTP(target)
                    local v = target:FindFirstChild("CoinVisual")
                    while v and not v:GetAttribute("Collected") and v.Parent do
                        if not AutofarmEnabled or not LP:GetAttribute("Alive") then break end
                        local n = getNearest()
                        if n and n ~= target then break end
                        task.wait()
                    end
                end
            end)
        else
            button.Text = "Autofarm: OFF"
            if Connection then Connection:Disconnect() end
        end
    end
end

-- Initialize
CreateUI()
UpdateMap()

-- Keybind (F to toggle)
UIS.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.F and not gameProcessed then
        ToggleAutofarm()
    end
end)

print("Cosmic Autofarm loaded! Press F to toggle.")
