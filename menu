local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local LP = Players.LocalPlayer
local UserInputService = game:GetService("UserInputService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local RunService = game:GetService("RunService")
local HttpService = game:GetService("HttpService")

-- Настройки
local hideBind = Enum.KeyCode.RightShift
local farmingSpeed = 20
local SPEED_OPTIONS = {15, 20, 25, 30}
local currentSpeedIndex = 2
local menuVisible = true
local isDragging = false
local dragStartPos, frameStartPos
local saveConfigEnabled = false

-- Состояния Player-функций
local infJumpEnabled = false
local flyEnabled = false
local noclipEnabled = false
local flySpeed = 50
local flyControls = {f = 0, b = 0, l = 0, r = 0}
local lastFlyControls = {f = 0, b = 0, l = 0, r = 0}
local flyBG, flyBV

-- Конфигурация
local config = {
    hideBind = hideBind,
    farmingSpeed = farmingSpeed,
    infJumpEnabled = infJumpEnabled,
    flyEnabled = flyEnabled,
    noclipEnabled = noclipEnabled,
    flySpeed = flySpeed
}

-- Функции для работы с конфигом
local function saveConfig()
    if not saveConfigEnabled then return end
    
    local data = {
        hideBind = tostring(config.hideBind),
        farmingSpeed = config.farmingSpeed,
        infJumpEnabled = config.infJumpEnabled,
        flyEnabled = config.flyEnabled,
        noclipEnabled = config.noclipEnabled,
        flySpeed = config.flySpeed
    }
    
    local success, err = pcall(function()
        writefile("DekoConfig.json", HttpService:JSONEncode(data))
    end)
    
    if not success then
        warn("Failed to save config: "..err)
    end
end

local function loadConfig()
    local success, data = pcall(function()
        if isfile("DekoConfig.json") then
            return HttpService:JSONDecode(readfile("DekoConfig.json"))
        end
    end)
    
    if success and data then
        config.hideBind = Enum.KeyCode[data.hideBind] or hideBind
        config.farmingSpeed = data.farmingSpeed or farmingSpeed
        config.infJumpEnabled = data.infJumpEnabled or false
        config.flyEnabled = data.flyEnabled or false
        config.noclipEnabled = data.noclipEnabled or false
        config.flySpeed = data.flySpeed or flySpeed
        
        -- Применяем загруженные настройки
        hideBind = config.hideBind
        farmingSpeed = config.farmingSpeed
        infJumpEnabled = config.infJumpEnabled
        flyEnabled = config.flyEnabled
        noclipEnabled = config.noclipEnabled
        flySpeed = config.flySpeed
    end
end

-- Создаем основной интерфейс
local ScreenGui = Instance.new("ScreenGui")
ScreenGui.Name = "DekoUI"
ScreenGui.ResetOnSpawn = false
ScreenGui.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

-- Текст версии (всегда видим)
local VersionLabel = Instance.new("TextLabel")
VersionLabel.Name = "VersionLabel"
VersionLabel.Size = UDim2.new(0, 100, 0, 20)
VersionLabel.Position = UDim2.new(0, 10, 0, 10)
VersionLabel.BackgroundTransparency = 1
VersionLabel.Text = "Using Deko v1.0"
VersionLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
VersionLabel.Font = Enum.Font.GothamBold
VersionLabel.TextSize = 14
VersionLabel.TextXAlignment = Enum.TextXAlignment.Left
VersionLabel.Parent = ScreenGui

-- Главное окно
local MainFrame = Instance.new("Frame")
MainFrame.Name = "MainFrame"
MainFrame.Size = UDim2.new(0, 450, 0, 250)
MainFrame.Position = UDim2.new(0.5, -225, 0.5, -125)
MainFrame.AnchorPoint = Vector2.new(0.5, 0.5)
MainFrame.BackgroundColor3 = Color3.fromRGB(35, 35, 35)
MainFrame.BorderSizePixel = 0
MainFrame.Parent = ScreenGui

-- Скругление углов
local UICorner = Instance.new("UICorner")
UICorner.CornerRadius = UDim.new(0, 6)
UICorner.Parent = MainFrame

-- TitleBar для перемещения
local TitleBar = Instance.new("Frame")
TitleBar.Name = "TitleBar"
TitleBar.Size = UDim2.new(1, 0, 0, 25)
TitleBar.Position = UDim2.new(0, 0, 0, 0)
TitleBar.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
TitleBar.BorderSizePixel = 0
TitleBar.Parent = MainFrame

local UICornerTitle = Instance.new("UICorner")
UICornerTitle.CornerRadius = UDim.new(0, 6)
UICornerTitle.Parent = TitleBar

local Title = Instance.new("TextLabel")
Title.Name = "Title"
Title.Size = UDim2.new(0, 100, 1, 0)
Title.Position = UDim2.new(0, 10, 0, 0)
Title.BackgroundTransparency = 1
Title.Text = "Deko | Simple farm instance"
Title.TextColor3 = Color3.fromRGB(255, 255, 255)
Title.Font = Enum.Font.GothamBold
Title.TextSize = 14
Title.TextXAlignment = Enum.TextXAlignment.Left
Title.Parent = TitleBar

-- Кнопки управления
local MinimizeButton = Instance.new("TextButton")
MinimizeButton.Name = "MinimizeButton"
MinimizeButton.Size = UDim2.new(0, 25, 0, 25)
MinimizeButton.Position = UDim2.new(1, -50, 0, 0)
MinimizeButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
MinimizeButton.BorderSizePixel = 0
MinimizeButton.Text = "-"
MinimizeButton.TextColor3 = Color3.fromRGB(255, 255, 255)
MinimizeButton.Font = Enum.Font.GothamBold
MinimizeButton.TextSize = 16
MinimizeButton.Parent = TitleBar

local CloseButton = Instance.new("TextButton")
CloseButton.Name = "CloseButton"
CloseButton.Size = UDim2.new(0, 25, 0, 25)
CloseButton.Position = UDim2.new(1, -25, 0, 0)
CloseButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
CloseButton.BorderSizePixel = 0
CloseButton.Text = "X"
CloseButton.TextColor3 = Color3.fromRGB(255, 255, 255)
CloseButton.Font = Enum.Font.GothamBold
CloseButton.TextSize = 14
CloseButton.Parent = TitleBar

-- Эффекты кнопок
CloseButton.MouseEnter:Connect(function()
    CloseButton.BackgroundColor3 = Color3.fromRGB(220, 50, 50)
end)

CloseButton.MouseLeave:Connect(function()
    CloseButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
end)

MinimizeButton.MouseEnter:Connect(function()
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
end)

MinimizeButton.MouseLeave:Connect(function()
    MinimizeButton.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
end)

-- Вкладки
local TabButtons = Instance.new("Frame")
TabButtons.Name = "TabButtons"
TabButtons.Size = UDim2.new(0, 80, 1, -25)
TabButtons.Position = UDim2.new(0, 0, 0, 25)
TabButtons.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
TabButtons.BorderSizePixel = 0
TabButtons.Parent = MainFrame

local Tabs = {"Farm", "Player", "Settings", "ESP", "Fun"}
local TabFrames = {}

for i, tabName in ipairs(Tabs) do
    local TabButton = Instance.new("TextButton")
    TabButton.Name = tabName.."Tab"
    TabButton.Size = UDim2.new(1, 0, 0, 30)
    TabButton.Position = UDim2.new(0, 0, 0, (i-1)*30)
    TabButton.Text = tabName
    TabButton.BackgroundColor3 = i == 1 and Color3.fromRGB(40, 40, 40) or Color3.fromRGB(30, 30, 30)
    TabButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    TabButton.Font = Enum.Font.Gotham
    TabButton.TextSize = 12
    TabButton.BorderSizePixel = 0
    TabButton.Parent = TabButtons
    
    local TabFrame = Instance.new("ScrollingFrame")
    TabFrame.Name = tabName.."Frame"
    TabFrame.Size = UDim2.new(1, -80, 1, -25)
    TabFrame.Position = UDim2.new(0, 80, 0, 25)
    TabFrame.BackgroundTransparency = 1
    TabFrame.Visible = i == 1
    TabFrame.CanvasSize = UDim2.new(0, 0, 0, 500)
    TabFrame.ScrollBarThickness = 5
    TabFrame.ScrollBarImageColor3 = Color3.fromRGB(100, 100, 100)
    TabFrame.Parent = MainFrame
    
    TabFrames[tabName] = TabFrame
    
    TabButton.MouseButton1Click:Connect(function()
        for _, frame in pairs(TabFrames) do
            frame.Visible = false
        end
        TabFrame.Visible = true
        
        for _, btn in ipairs(TabButtons:GetChildren()) do
            if btn:IsA("TextButton") then
                btn.BackgroundColor3 = btn == TabButton and Color3.fromRGB(40, 40, 40) or Color3.fromRGB(30, 30, 30)
            end
        end
    end)
end

-- Добавляем текст "Not added yet" во вкладку Fun
local NotAddedLabel = Instance.new("TextLabel")
NotAddedLabel.Name = "NotAddedLabel"
NotAddedLabel.Size = UDim2.new(1, -20, 0, 50)
NotAddedLabel.Position = UDim2.new(0, 10, 0, 10)
NotAddedLabel.BackgroundTransparency = 1
NotAddedLabel.Text = "Not added yet"
NotAddedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
NotAddedLabel.Font = Enum.Font.GothamBold
NotAddedLabel.TextSize = 16
NotAddedLabel.TextXAlignment = Enum.TextXAlignment.Left
NotAddedLabel.Parent = TabFrames["Fun"]

local NotAddedLabel = Instance.new("TextLabel")
NotAddedLabel.Name = "NotAddedLabel"
NotAddedLabel.Size = UDim2.new(1, -20, 0, 50)
NotAddedLabel.Position = UDim2.new(0, 10, 0, 10)
NotAddedLabel.BackgroundTransparency = 1
NotAddedLabel.Text = "Not added yet"
NotAddedLabel.TextColor3 = Color3.fromRGB(255, 255, 255)
NotAddedLabel.Font = Enum.Font.GothamBold
NotAddedLabel.TextSize = 16
NotAddedLabel.TextXAlignment = Enum.TextXAlignment.Left
NotAddedLabel.Parent = TabFrames["ESP"]

-- Функционал сворачивания
local minimized = false
local originalSize = MainFrame.Size

MinimizeButton.MouseButton1Click:Connect(function()
    minimized = not minimized
    if minimized then
        MainFrame.Size = UDim2.new(0, 80, 0, 25)
        for _, frame in pairs(TabFrames) do
            frame.Visible = false
        end
    else
        MainFrame.Size = originalSize
        TabFrames["Farm"].Visible = true
    end
end)

CloseButton.MouseButton1Click:Connect(function()
    ScreenGui:Destroy()
end)

-- Функции для создания элементов UI
local function createToggle(name, posY, defaultValue, callback, parentFrame, warningText)
    local ToggleFrame = Instance.new("Frame")
    ToggleFrame.Name = name.."Toggle"
    ToggleFrame.Size = UDim2.new(0, 150, 0, warningText and 40 or 30)
    ToggleFrame.Position = UDim2.new(0, 20, 0, posY)
    ToggleFrame.BackgroundTransparency = 1
    ToggleFrame.Parent = parentFrame or TabFrames["Farm"]
    
    local ToggleButton = Instance.new("TextButton")
    ToggleButton.Name = "Button"
    ToggleButton.Size = UDim2.new(0, 40, 0, 20)
    ToggleButton.Position = UDim2.new(0, 100, 0, 0)
    ToggleButton.Text = ""
    ToggleButton.BackgroundColor3 = defaultValue and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(60, 60, 60)
    ToggleButton.AutoButtonColor = false
    ToggleButton.BorderSizePixel = 0
    ToggleButton.Parent = ToggleFrame
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 10)
    UICorner.Parent = ToggleButton
    
    local ToggleText = Instance.new("TextLabel")
    ToggleText.Name = "Text"
    ToggleText.Size = UDim2.new(0, 90, 0, 20)
    ToggleText.Position = UDim2.new(0, 0, 0, 0)
    ToggleText.Text = name
    ToggleText.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleText.Font = Enum.Font.Gotham
    ToggleText.TextSize = 12
    ToggleText.TextXAlignment = Enum.TextXAlignment.Left
    ToggleText.BackgroundTransparency = 1
    ToggleText.Parent = ToggleFrame
    
    if warningText then
        local WarningLabel = Instance.new("TextLabel")
        WarningLabel.Name = "Warning"
        WarningLabel.Size = UDim2.new(1, 0, 0, 15)
        WarningLabel.Position = UDim2.new(0, 0, 0, 25)
        WarningLabel.Text = warningText
        WarningLabel.TextColor3 = Color3.fromRGB(255, 50, 50)
        WarningLabel.Font = Enum.Font.Gotham
        WarningLabel.TextSize = 10
        WarningLabel.TextXAlignment = Enum.TextXAlignment.Left
        WarningLabel.BackgroundTransparency = 1
        WarningLabel.Parent = ToggleFrame
    end
    
    local function updateState(state)
        ToggleButton.BackgroundColor3 = state and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(60, 60, 60)
        callback(state)
        config[name.."Enabled"] = state
        saveConfig()
    end
    
    ToggleButton.MouseButton1Click:Connect(function()
        updateState(not defaultValue)
        defaultValue = not defaultValue
    end)
    
    return {Update = updateState}
end

local function createDropdown(name, posY, options, defaultIndex, callback, parentFrame)
    local DropdownFrame = Instance.new("Frame")
    DropdownFrame.Name = name.."Dropdown"
    DropdownFrame.Size = UDim2.new(0, 150, 0, 30)
    DropdownFrame.Position = UDim2.new(0, 20, 0, posY)
    DropdownFrame.BackgroundTransparency = 1
    DropdownFrame.Parent = parentFrame or TabFrames["Farm"]
    
    local DropdownButton = Instance.new("TextButton")
    DropdownButton.Name = "Button"
    DropdownButton.Size = UDim2.new(0, 60, 0, 25)
    DropdownButton.Position = UDim2.new(0, 80, 0.5, -12)
    DropdownButton.Text = options[defaultIndex]
    DropdownButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    DropdownButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownButton.Font = Enum.Font.Gotham
    DropdownButton.TextSize = 12
    DropdownButton.BorderSizePixel = 0
    DropdownButton.Parent = DropdownFrame
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = DropdownButton
    
    local DropdownText = Instance.new("TextLabel")
    DropdownText.Name = "Text"
    DropdownText.Size = UDim2.new(0, 70, 1, 0)
    DropdownText.Position = UDim2.new(0, 0, 0, 0)
    DropdownText.Text = name
    DropdownText.TextColor3 = Color3.fromRGB(255, 255, 255)
    DropdownText.Font = Enum.Font.Gotham
    DropdownText.TextSize = 12
    DropdownText.TextXAlignment = Enum.TextXAlignment.Left
    DropdownText.BackgroundTransparency = 1
    DropdownText.Parent = DropdownFrame
    
    local currentIndex = defaultIndex
    
    DropdownButton.MouseButton1Click:Connect(function()
        currentIndex = currentIndex % #options + 1
        DropdownButton.Text = options[currentIndex]
        callback(currentIndex)
        config[name] = options[currentIndex]
        saveConfig()
    end)
    
    return {
        Update = function(index)
            currentIndex = index
            DropdownButton.Text = options[currentIndex]
            callback(currentIndex)
        end
    }
end

-- Элементы управления фармом
local farmingEnabled = false
local CoinFarmToggle = createToggle("Auto Farm", 20, farmingEnabled, function(state)
    farmingEnabled = state
end)

-- Dropdown для выбора скорости
local SpeedDropdown = createDropdown("Farm Speed", 60, {"15", "20", "25", "30"}, currentSpeedIndex, function(index)
    farmingSpeed = SPEED_OPTIONS[index]
end)

-- Функции для вкладки Player
local InfJumpToggle = createToggle("Inf Jump", 20, infJumpEnabled, function(state)
    infJumpEnabled = state
end, TabFrames["Player"])

local FlyToggle = createToggle("Fly", 70, flyEnabled, function(state)
    flyEnabled = state
    if state then
        startFly()
    else
        stopFly()
    end
end, TabFrames["Player"], "RISK")

local NoclipToggle = createToggle("Noclip", 120, noclipEnabled, function(state)
    noclipEnabled = state
    if state then
        noclip()
    else
        clip()
    end
end, TabFrames["Player"], "RISK")

local FlySpeedDropdown = createDropdown("Fly Speed", 170, {"30", "50", "70", "100"}, 2, function(index)
    flySpeed = ({30, 50, 70, 100})[index]
end, TabFrames["Player"])

-- Настройки вкладки Settings
local function createKeybindButton(name, posY, currentKey, callback)
    local KeybindFrame = Instance.new("Frame")
    KeybindFrame.Name = name.."Keybind"
    KeybindFrame.Size = UDim2.new(0, 200, 0, 30)
    KeybindFrame.Position = UDim2.new(0, 20, 0, posY)
    KeybindFrame.BackgroundTransparency = 1
    KeybindFrame.Parent = TabFrames["Settings"]
    
    local KeybindText = Instance.new("TextLabel")
    KeybindText.Name = "Text"
    KeybindText.Size = UDim2.new(0, 120, 1, 0)
    KeybindText.Position = UDim2.new(0, 0, 0, 0)
    KeybindText.Text = name
    KeybindText.TextColor3 = Color3.fromRGB(255, 255, 255)
    KeybindText.Font = Enum.Font.Gotham
    KeybindText.TextSize = 12
    KeybindText.TextXAlignment = Enum.TextXAlignment.Left
    KeybindText.BackgroundTransparency = 1
    KeybindText.Parent = KeybindFrame
    
    local KeybindButton = Instance.new("TextButton")
    KeybindButton.Name = "Button"
    KeybindButton.Size = UDim2.new(0, 70, 0, 25)
    KeybindButton.Position = UDim2.new(0, 120, 0.5, -12)
    KeybindButton.Text = tostring(currentKey):gsub("Enum.KeyCode.", "")
    KeybindButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    KeybindButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    KeybindButton.Font = Enum.Font.Gotham
    KeybindButton.TextSize = 12
    KeybindButton.BorderSizePixel = 0
    KeybindButton.Parent = KeybindFrame
    
    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 4)
    UICorner.Parent = KeybindButton
    
    local listening = false
    
    KeybindButton.MouseButton1Click:Connect(function()
        listening = true
        KeybindButton.Text = "[Press Key]"
        KeybindButton.BackgroundColor3 = Color3.fromRGB(0, 100, 200)
    end)
    
    UserInputService.InputBegan:Connect(function(input, gameProcessed)
        if listening and not gameProcessed then
            if input.UserInputType == Enum.UserInputType.Keyboard then
                listening = false
                currentKey = input.KeyCode
                KeybindButton.Text = tostring(currentKey):gsub("Enum.KeyCode.", "")
                KeybindButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
                callback(currentKey)
                config.hideBind = currentKey
                saveConfig()
            end
        end
    end)
    
    return {
        Update = function(key)
            currentKey = key
            KeybindButton.Text = tostring(key):gsub("Enum.KeyCode.", "")
        end
    }
end

local HideBindButton = createKeybindButton("Hide Menu Bind", 20, hideBind, function(newKey)
    hideBind = newKey
end)

-- Сохранение конфига
local SaveConfigToggle = createToggle("Save Config", 70, saveConfigEnabled, function(state)
    saveConfigEnabled = state
    if state then
        saveConfig()
    end
end, TabFrames["Settings"])

-- Функции фарма
local HRP, Humanoid

local function getHRP()
    while true do
        if LP.Character and LP.Character:FindFirstChild("HumanoidRootPart") then
            return LP.Character.HumanoidRootPart
        end
        task.wait(0.1)
    end
end

local function getHumanoid()
    while true do
        if LP.Character and LP.Character:FindFirstChild("Humanoid") then
            return LP.Character.Humanoid
        end
        task.wait(0.1)
    end
end

local function refreshCharacter()
    HRP = getHRP()
    Humanoid = getHumanoid()
end

local function GetMap()
    while true do
        for _, obj in ipairs(workspace:GetChildren()) do
            if obj:GetAttribute("MapID") and obj:FindFirstChild("CoinContainer") then
                return obj
            end
        end
        task.wait(0.1)
    end
end

local function getNearest()
    if not HRP then return nil end
    
    local map = GetMap()
    local closest, dist = nil, math.huge
    
    for _, coin in ipairs(map.CoinContainer:GetChildren()) do
        local v = coin:FindFirstChild("CoinVisual")
        if v and not v:GetAttribute("Collected") then
            local d = (HRP.Position - coin.Position).Magnitude
            if d < dist then
                closest = coin
                dist = d
            end
        end
    end
    
    return closest
end

local function tpToCoin(coin)
    if not HRP or not Humanoid then return false end
    
    Humanoid:ChangeState(11)
    local distance = (HRP.Position - coin.Position).Magnitude
    local tween = TweenService:Create(
        HRP,
        TweenInfo.new(distance / farmingSpeed, Enum.EasingStyle.Linear),
        {CFrame = coin.CFrame}
    )
    
    tween:Play()
    tween.Completed:Wait()
    return true
end

-- Функции для Player-вкладки
local NoclipConnection = nil
local Clip = true

function noclip()
    Clip = false
    if NoclipConnection then NoclipConnection:Disconnect() end
    
    NoclipConnection = RunService.Stepped:Connect(function()
        if not Clip and LP.Character then
            for _, v in pairs(LP.Character:GetDescendants()) do
                if v:IsA('BasePart') and v.CanCollide then
                    v.CanCollide = false
                end
            end
        end
    end)
end

function clip()
    if NoclipConnection then NoclipConnection:Disconnect() end
    Clip = true
    if LP.Character then
        for _, v in pairs(LP.Character:GetDescendants()) do
            if v:IsA('BasePart') then
                v.CanCollide = true
            end
        end
    end
end

function startFly()
    if not LP.Character or not LP.Character:FindFirstChild("HumanoidRootPart") then return end
    
    local torso = LP.Character.HumanoidRootPart
    if flyBG then flyBG:Destroy() end
    if flyBV then flyBV:Destroy() end
    
    flyBG = Instance.new("BodyGyro", torso)
    flyBG.P = 9e4
    flyBG.maxTorque = Vector3.new(9e9, 9e9, 9e9)
    flyBG.cframe = torso.CFrame
    
    flyBV = Instance.new("BodyVelocity", torso)
    flyBV.velocity = Vector3.new(0, 0.1, 0)
    flyBV.maxForce = Vector3.new(9e9, 9e9, 9e9)
    
    LP.Character.Humanoid.PlatformStand = true
    
    -- Обработка управления полетом
    local flyConnection
    flyConnection = RunService.Stepped:Connect(function()
        if not flyEnabled or not LP.Character or not LP.Character:FindFirstChild("HumanoidRootPart") then
            flyConnection:Disconnect()
            return
        end
        
        local torso = LP.Character.HumanoidRootPart
        local cam = workspace.CurrentCamera.CoordinateFrame
        
        if (flyControls.l + flyControls.r) ~= 0 or (flyControls.f + flyControls.b) ~= 0 then
            flyBV.velocity = ((cam.lookVector * (flyControls.f + flyControls.b)) + 
                             ((cam * CFrame.new(flyControls.l + flyControls.r, (flyControls.f + flyControls.b) * 0.2, 0).p) - cam.p)) * flySpeed
            lastFlyControls = {f = flyControls.f, b = flyControls.b, l = flyControls.l, r = flyControls.r}
        elseif (flyControls.l + flyControls.r) == 0 and (flyControls.f + flyControls.b) == 0 then
            flyBV.velocity = Vector3.new(0, 0.1, 0)
        end
        
        flyBG.cframe = cam * CFrame.Angles(-math.rad((flyControls.f + flyControls.b) * 50 * 0.1), 0, 0)
    end)
end

function stopFly()
    if flyBG then flyBG:Destroy() end
    if flyBV then flyBV:Destroy() end
    if LP.Character and LP.Character:FindFirstChildOfClass("Humanoid") then
        LP.Character:FindFirstChildOfClass("Humanoid").PlatformStand = false
    end
end

-- Обработка управления полетом
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if gameProcessed or not flyEnabled then return end
    
    if input.KeyCode == Enum.KeyCode.W then
        flyControls.f = 1
    elseif input.KeyCode == Enum.KeyCode.S then
        flyControls.b = -1
    elseif input.KeyCode == Enum.KeyCode.A then
        flyControls.l = -1
    elseif input.KeyCode == Enum.KeyCode.D then
        flyControls.r = 1
    end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
    if gameProcessed or not flyEnabled then return end
    
    if input.KeyCode == Enum.KeyCode.W then
        flyControls.f = 0
    elseif input.KeyCode == Enum.KeyCode.S then
        flyControls.b = 0
    elseif input.KeyCode == Enum.KeyCode.A then
        flyControls.l = 0
    elseif input.KeyCode == Enum.KeyCode.D then
        flyControls.r = 0
    end
end)

-- Бесконечные прыжки
UserInputService.JumpRequest:Connect(function()
    if infJumpEnabled and LP.Character and LP.Character:FindFirstChildOfClass("Humanoid") then
        LP.Character:FindFirstChildOfClass("Humanoid"):ChangeState("Jumping")
    end
end)

-- Перемещение окна
TitleBar.InputBegan:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        isDragging = true
        dragStartPos = input.Position
        frameStartPos = MainFrame.Position
    end
end)

TitleBar.InputEnded:Connect(function(input)
    if input.UserInputType == Enum.UserInputType.MouseButton1 then
        isDragging = false
    end
end)

UserInputService.InputChanged:Connect(function(input)
    if isDragging and input.UserInputType == Enum.UserInputType.MouseMovement then
        local delta = input.Position - dragStartPos
        MainFrame.Position = UDim2.new(
            frameStartPos.X.Scale, 
            frameStartPos.X.Offset + delta.X,
            frameStartPos.Y.Scale, 
            frameStartPos.Y.Offset + delta.Y
        )
    end
end)

-- Основной цикл фарма
local function farmCoins()
    while true do
        if farmingEnabled and LP.Character then
            -- Обновляем ссылки на персонажа
            refreshCharacter()
            
            -- Ждем пока игрок жив
            while not LP:GetAttribute("Alive") do
                task.wait(0.5)
            end
            
            -- Проверяем наличие персонажа
            if not LP.Character or not HRP or not Humanoid then
                task.wait(1)
                continue
            end
            
            -- Ищем ближайшую монету
            local target = getNearest()
            
            if target then
                -- Пытаемся телепортироваться
                local success = pcall(function()
                    tpToCoin(target)
                end)
                
                if not success then
                    refreshCharacter()
                end
                
                -- Ожидаем пока монета не будет собрана
                local v = target:FindFirstChild("CoinVisual")
                while v and not v:GetAttribute("Collected") and v.Parent do
                    if not LP:GetAttribute("Alive") then break end
                    
                    -- Проверяем не появилась ли более близкая монета
                    local newTarget = getNearest()
                    if newTarget and newTarget ~= target then
                        target = newTarget
                        break
                    end
                    
                    task.wait(0.1)
                end
            end
        end
        task.wait(0.1)
    end
end

-- Обработчик возрождения персонажа
LP.CharacterAdded:Connect(function(character)
    -- Восстанавливаем видимость меню после смерти
    MainFrame.Visible = menuVisible
    refreshCharacter()
    
    -- Применяем функции Player-вкладки при возрождении
    if infJumpEnabled then
        -- Бесконечные прыжки уже подключены через JumpRequest
    end
    if flyEnabled then 
        task.wait(0.5) -- Даем время персонажу заспауниться
        startFly() 
    end
    if noclipEnabled then 
        noclip() 
    end
end)

-- Обработка бинда скрытия
UserInputService.InputBegan:Connect(function(input, gameProcessed)
    if not gameProcessed and input.KeyCode == hideBind then
        menuVisible = not menuVisible
        MainFrame.Visible = menuVisible
    end
end)

-- Загрузка конфига при старте
loadConfig()

-- Применяем загруженные настройки
if config then
    HideBindButton.Update(config.hideBind)
    SpeedDropdown.Update(table.find(SPEED_OPTIONS, config.farmingSpeed) or 2)
    InfJumpToggle.Update(config.infJumpEnabled)
    FlyToggle.Update(config.flyEnabled)
    NoclipToggle.Update(config.noclipEnabled)
    FlySpeedDropdown.Update(table.find({30, 50, 70, 100}, config.flySpeed) or 2)
end

-- Запускаем основные функции
coroutine.wrap(farmCoins)()
