-- Autofarm Script with Toggle UI
local TweenService = game:GetService("TweenService")
local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")

-- Autofarm Variables
local LP = Players.LocalPlayer
local Char = LP.Character or LP.CharacterAdded:Wait()
local HRP = Char:WaitForChild("HumanoidRootPart")
local Humanoid = Char:WaitForChild("Humanoid")
local AutofarmEnabled = false

-- UI Variables
local ScreenGui = Instance.new("ScreenGui")
local MainFrame = Instance.new("Frame")
local ToggleButton = Instance.new("TextButton")

-- Create UI
function CreateUI()
    ScreenGui.Name = "AutofarmUI"
    ScreenGui.Parent = game.CoreGui
    ScreenGui.ResetOnSpawn = false

    MainFrame.Name = "MainFrame"
    MainFrame.Size = UDim2.new(0, 200, 0, 50)
    MainFrame.Position = UDim2.new(0.5, -100, 0, 10)
    MainFrame.AnchorPoint = Vector2.new(0.5, 0)
    MainFrame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    MainFrame.BorderSizePixel = 0
    MainFrame.Parent = ScreenGui

    local UICorner = Instance.new("UICorner")
    UICorner.CornerRadius = UDim.new(0, 8)
    UICorner.Parent = MainFrame

    ToggleButton.Name = "ToggleButton"
    ToggleButton.Size = UDim2.new(0.9, 0, 0.7, 0)
    ToggleButton.Position = UDim2.new(0.05, 0, 0.15, 0)
    ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    ToggleButton.TextColor3 = Color3.fromRGB(255, 255, 255)
    ToggleButton.Text = "Autofarm: OFF"
    ToggleButton.Font = Enum.Font.GothamBold
    ToggleButton.TextSize = 14
    ToggleButton.Parent = MainFrame

    local ButtonCorner = Instance.new("UICorner")
    ButtonCorner.CornerRadius = UDim.new(0, 6)
    ButtonCorner.Parent = ToggleButton

    -- Make UI draggable
    local dragging
    local dragInput
    local dragStart
    local startPos

    local function updateInput(input)
        local delta = input.Position - dragStart
        MainFrame.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
    end

    MainFrame.InputBegan:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseButton1 then
            dragging = true
            dragStart = input.Position
            startPos = MainFrame.Position
            
            input.Changed:Connect(function()
                if input.UserInputState == Enum.UserInputState.End then
                    dragging = false
                end
            end)
        end
    end)

    MainFrame.InputChanged:Connect(function(input)
        if input.UserInputType == Enum.UserInputType.MouseMovement then
            dragInput = input
        end
    end)

    UIS.InputChanged:Connect(function(input)
        if input == dragInput and dragging then
            updateInput(input)
        end
    end)
end

-- Autofarm Functions
function GetMap()
    while true do
        for _, obj in ipairs(workspace:GetChildren()) do
            if obj:GetAttribute("MapID") and obj:FindFirstChild("CoinContainer") then
                return obj
            end
        end
        task.wait()
    end
end

function getNearest()
    local map = GetMap()
    local closest, dist = nil, math.huge
    for _, coin in ipairs(map.CoinContainer:GetChildren()) do
        local v = coin:FindFirstChild("CoinVisual")
        if v and not v:GetAttribute("Collected") then
            local d = (HRP.Position - coin.Position).Magnitude
            if d < dist then
                closest = coin
                dist = d
            end
        end
    end
    return closest
end

function tp(hp)
    Humanoid:ChangeState(11)
    local d = (HRP.Position - hp.Position).Magnitude
    local t = TweenService:Create(HRP, TweenInfo.new(d / 25, Enum.EasingStyle.Linear), {CFrame = hp.CFrame})
    t:Play()
    t.Completed:Wait()
end

function ToggleAutofarm()
    AutofarmEnabled = not AutofarmEnabled
    
    if AutofarmEnabled then
        ToggleButton.Text = "Autofarm: ON"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(0, 170, 0)
        
        -- Start autofarm coroutine
        coroutine.wrap(function()
            while AutofarmEnabled and task.wait() do
                local target = getNearest()
                if target and LP:GetAttribute("Alive") then
                    tp(target)
                    local v = target:FindFirstChild("CoinVisual")
                    while v and not v:GetAttribute("Collected") and v.Parent do
                        if not AutofarmEnabled or not LP:GetAttribute("Alive") then break end
                        local n = getNearest()
                        if n and n ~= target then break end
                        task.wait()
                    end
                end
            end
        end)()
    else
        ToggleButton.Text = "Autofarm: OFF"
        ToggleButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    end
end

-- Initialize
CreateUI()
ToggleButton.MouseButton1Click:Connect(ToggleAutofarm)

-- Keybind (F to toggle)
UIS.InputBegan:Connect(function(input, gameProcessed)
    if input.KeyCode == Enum.KeyCode.F and not gameProcessed then
        ToggleAutofarm()
    end
end)

print("Autofarm script loaded! Click the button or press F to toggle.")
